// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#define ZMK_POINTING_DEFAULT_MOVE_VAL 2500  // 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 20    // 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/pointing.h>

#define MAC 0
#define WIN 1
#define RIG 2
#define LEF 3
#define TRI 4
#define MOUSE 5

// https: //zmk.dev/docs/development/hardware-integration/soft-off-setup?advanced-methods=wakeup&kscan-type=dkscan

/ {
    keys {
        compatible = "gpio-keys";

        soft_off_gpio_key: soft_off_gpio_key { gpios = <&gpio1 6 (GPIO_ACTIVE_LOW | GPIO_PULL_UP)>; };
    };

    wakeup_scan: wakeup_scan {
        compatible = "zmk,kscan-gpio-direct";
        input-keys = <&soft_off_gpio_key>;
        wakeup-source;
    };

    side_band_behavior_triggers: side_band_behavior_triggers {
        compatible = "zmk,kscan-sideband-behaviors";
        kscan = <&wakeup_scan>;
        auto-enable;
        wakeup-source;
    };

    soft_off_wakers {
        compatible = "zmk,soft-off-wakeup-sources";
        wakeup-sources = <&wakeup_scan>;
    };
};

/ {
    chosen { zmk,charmap = &charmap_us; };

    behaviors {
        ht: hold_tap {
            label = "hold_tap";
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <150>;
            global-quick-tap;
            bindings = <&kp>, <&kp>;
        };

        mmv {
            acceleration-exponent = <1>;      // 1
            time-to-max-speed-ms = <300>;    // 40
            delay-ms = <0>;                   // 0
        };

        msc {
            acceleration-exponent = <0>;      // 0
            time-to-max-speed-ms = <40>;      // 500
            delay-ms = <0>;                   // 10
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        tri_layer {
            if-layers = <2 3>;
            then-layer = <4>;
        };
    };

    combos {
        compatible = "zmk,combos";

        magic {
            bindings = <&mo 5>;
            key-positions = <30 31>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        /**/
        /**/
        /**/

        default_layer {
            display-name = "DEFAULT";
            bindings = <
&kp Q        &kp W       &kp E       &kp R         &kp T        &kp Y        &kp U        &kp I       &kp O       &kp SEMICOLON
&ht LCTRL A  &ht LALT S  &ht LGUI D  &ht LSHIFT F  &kp G        &kp H        &ht RSHFT J  &ht RGUI K  &ht RALT L  &ht RCTRL P
&kp Z        &kp X       &kp C       &kp V         &kp B        &kp N        &kp M        &kp COMMA   &kp DOT     &kp SLASH
                                     &lt 1 BSPC    &lt 2 ESC    &lt 4 ENTER  &lt 3 SPACE
            >;
        };

        mouse {
            display-name = "MOUSE";
            bindings = <
&trans          &trans          &mmv MOVE_UP    &trans           &trans    &trans    &trans    &trans  &trans  &trans
&msc SCRL_UP    &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &trans    &trans    &trans  &trans  &trans
&msc SCRL_DOWN  &trans          &trans          &trans           &trans    &trans    &trans    &trans  &trans  &trans
                                                &trans           &trans    &mkp MB2  &mkp MB1
            >;
        };

        nav {
            display-name = "NAV";
            bindings = <
&trans       &mt LALT RIGHT  &trans    &trans      &trans           &mt RGUI C  &mt RGUI Z  &trans  &kp ENTER  &trans
&kp LCTRL    &kp LALT        &kp LGUI  &kp LSHIFT  &trans           &kp LEFT    &kp DOWN    &kp UP  &kp RIGHT  &mt RGUI V
&bootloader  &trans          &trans    &trans      &mt LALT LEFT    &trans      &trans      &trans  &trans     &trans
                                       &trans      &trans           &mkp TAB    &trans
            >;
        };

        numbers {
            display-name = "NUM";
            bindings = <
&kp TILDE  &kp N7  &kp N8  &kp N9   &kp N0       &none   &none      &none     &none     &none
&kp LBKT   &kp N4  &kp N5  &kp N6   &kp RBKT     &none   &kp RSHFT  &kp RGUI  &kp RALT  &kp RCTRL
&kp BSLH   &kp N1  &kp N2  &kp N3   &kp MINUS    &none   &none      &none     &none     &bootloader
                           &kp SQT  &kp EQUAL    &trans  &trans
            >;
        };

        symbols {
            display-name = "SYMBOL";
            bindings = <
&kp LS(TILDE)  &kp LS(AMPS)  &kp LS(STAR)   &kp LS(LPAR)   &kp LS(RPAR)     &none   &none      &none     &none     &none
&kp LS(LBRC)   &kp LS(DLLR)  &kp LS(PRCNT)  &kp LS(CARET)  &kp LS(RBRC)     &none   &kp RSHFT  &kp RGUI  &kp RALT  &kp RCTRL
&kp LS(PIPE)   &kp LS(EXCL)  &kp LS(AT)     &kp LS(POUND)  &kp LS(UNDER)    &none   &none      &none     &none     &bootloader
                                            &kp LS(DQT)    &kp LS(PLUS)     &trans  &trans
            >;
        };

        system {
            display-name = "SYSTEM";
            bindings = <
&trans  &trans  &trans  &trans  &trans    &bt BT_SEL 0  &bt BT_SEL_1          &bt BT_SEL 2          &bt BT_SEL 3  &bt BT_SEL_4
&trans  &trans  &trans  &trans  &trans    &trans        &kp C_VOLUME_DOWN     &kp C_VOLUME_UP       &kp K_MUTE    &trans
&trans  &trans  &trans  &trans  &trans    &trans        &kp C_BRIGHTNESS_INC  &kp C_BRIGHTNESS_DEC  &trans        &trans
                        &trans  &trans    &trans        &trans
            >;
        };
    };
};
